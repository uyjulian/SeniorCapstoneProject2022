{
  "name" : "Continuous Integration",
  "on" : {
    "push" : {
      "paths" : [
        "**"
      ]
    },
    "pull_request" : {
      "paths" : [
        "**"
      ]
    }
  },
  "env" : {
    "CMAKE_GENERATOR" : "Ninja"
  },
  "jobs" : {
    "build-ubuntu" : {
      "runs-on" : "ubuntu-20.04",
      "timeout-minutes" : 20,
      "steps" : [
        {
          "name" : "Checkout repository and submodules recursively",
          "uses" : "actions/checkout@v2",
          "with" : {
            "submodules" : "recursive"
          }
        },
        {
          "name" : "Update APT information",
          "run" : "sudo apt-get update"
        },
        {
          "name" : "Install required dependencies",
          "run" : "sudo apt-get install build-essential cmake ninja-build"
        },
        {
          "name" : "Configure project",
          "run" : "cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo"
        },
        {
          "name" : "Build project",
          "run" : "cmake --build build"
        }
      ]
    },
    "build-ubuntu-win32" : {
      "runs-on" : "ubuntu-20.04",
      "timeout-minutes" : 20,
      "strategy" : {
        "fail-fast" : false,
        "matrix" : {
          "platform" : [
            {
              "triplet" : "i686-w64-mingw32",
              "cmake-system-compiler" : "i686",
              "compiler" : "gcc"
            },
            {
              "triplet" : "x86_64-w64-mingw32",
              "cmake-system-compiler" : "amd64",
              "compiler" : "gcc"
            }
          ]
        }
      },
      "steps" : [
        {
          "name" : "Checkout repository and submodules recursively",
          "uses" : "actions/checkout@v2",
          "with" : {
            "submodules" : "recursive"
          }
        },
        {
          "name" : "Update APT information",
          "run" : "sudo apt-get update"
        },
        {
          "name" : "Install required dependencies",
          "run" : "sudo apt-get install build-essential cmake ninja-build"
        },
        {
          "name" : "Install required dependencies for mingw-w64",
          "run" : "sudo apt-get install mingw-w64"
        },
        {
          "name" : "Configure project",
          "run" : "cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.platform.cmake-system-compiler }} -DCMAKE_FIND_ROOT_PATH=/dev/null -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DCMAKE_C_COMPILER=${{ matrix.platform.triplet }}-gcc -DCMAKE_CXX_COMPILER=${{ matrix.platform.triplet }}-g++ -DCMAKE_RC_COMPILER=${{ matrix.platform.triplet }}-windres"
        },
        {
          "name" : "Build project",
          "run" : "cmake --build build"
        }
      ]
    },
    "build-ubuntu-pico" : {
      "runs-on" : "ubuntu-20.04",
      "timeout-minutes" : 20,
      "steps" : [
        {
          "name" : "Checkout repository and submodules recursively",
          "uses" : "actions/checkout@v2",
          "with" : {
            "submodules" : "recursive"
          }
        },
        {
          "name" : "Update APT information",
          "run" : "sudo apt-get update"
        },
        {
          "name" : "Install required dependencies",
          "run" : "sudo apt-get install build-essential cmake ninja-build"
        },
        {
          "name" : "Install required dependencies for Raspberry Pi Pico target",
          "run" : "sudo apt-get install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libstdc++-arm-none-eabi-newlib"
        },
        {
          "name" : "Set environment variable PICO_PATH for Raspberry Pi Pico",
          "run" : "echo \"PICO_PATH=$(pwd)/pico\" >> $GITHUB_ENV"
        },
        {
          "name" : "Set environment variable PICO_SDK_PATH for Raspberry Pi Pico",
          "run" : "echo \"PICO_SDK_PATH=${{ env.PICO_PATH }}/pico-sdk/\" >> $GITHUB_ENV"
        },
        {
          "name" : "Make directory for Pico path",
          "run" : "mkdir -p $PICO_PATH"
        },
        {
          "name" : "Clone Raspberry Pi Pico SDK",
          "run" : "git clone -b master --recursive https://github.com/raspberrypi/pico-sdk.git $PICO_SDK_PATH"
        },
        {
          "name" : "Configure project",
          "run" : "cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DTARGET_RASPI_PICO=ON"
        },
        {
          "name" : "Build project",
          "run" : "cmake --build build"
        }
      ]
    }
  }
}
